name: Release Homebrew Tap

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Download Linux AMD64 package
      uses: robinraju/release-downloader@v1.8
      with:
        repository: "supabase/dbdev"
        tag: ${{ inputs.tag }}
        fileName: "dbdev-${{ inputs.tag }}-linux-amd64.tar.gz"

    - name: Download Linux ARM64 package
      uses: robinraju/release-downloader@v1.8
      with:
        repository: "supabase/dbdev"
        tag: ${{ inputs.tag }}
        fileName: "dbdev-${{ inputs.tag }}-linux-arm64.tar.gz"

    - name: Download macOS AMD64 package
      uses: robinraju/release-downloader@v1.8
      with:
        repository: "supabase/dbdev"
        tag: ${{ inputs.tag }}
        fileName: "dbdev-${{ inputs.tag }}-macos-amd64.tar.gz"

    - uses: actions/checkout@v3
      with:
        repository: imor/homebrew-tap #TODO: replace with supabase/homebrew-tap after testing
        ref: 'main'
        token:  ${{ secrets.HOMEBREW_TAP_RW }}

    - name: Generate Manifest File
      run: |
        ls -al

        linux_amd64_hash=`shasum -a 256 dbdev-${{ inputs.tag }}-linux-amd64.tar.gz | cut -d" " -f1`
        linux_arm64_hash=`shasum -a 256 dbdev-${{ inputs.tag }}-linux-arm64.tar.gz | cut -d" " -f1`
        macos_amd64_hash=`shasum -a 256 dbdev-${{ inputs.tag }}-macos-amd64.tar.gz | cut -d" " -f1`

        tag=${{ inputs.tag }}
        # strip the leading v
        version=${tag:1}

        touch dbdev.rb

        echo '# typed: false' > dbdev.rb
        echo '# frozen_string_literal: true' >> dbdev.rb
        echo '' >> dbdev.rb
        echo 'class Dbdev < Formula' >> dbdev.rb
        echo '  desc "Dbdev CLI"' >> dbdev.rb
        echo '  homepage "https://database.dev/"' >> dbdev.rb
        echo "  version \"${version}\"" >> dbdev.rb
        echo '  license "MIT"' >> dbdev.rb
        echo '' >> dbdev.rb
        echo '  on_macos do' >> dbdev.rb
        echo '    if Hardware::CPU.arm?' >> dbdev.rb
        echo "      url \"https://github.com/supabase/dbdev/releases/download/v${version}/dbdev-v${version}-macos-amd64.tar.gz\"" >> dbdev.rb
        echo "      sha256 \"${macos_amd64_hash}\"" >> dbdev.rb
        echo '' >> dbdev.rb
        echo '      def install' >> dbdev.rb
        echo '        bin.install "dbdev"' >> dbdev.rb
        echo '      end' >> dbdev.rb
        echo '    end' >> dbdev.rb
        echo '    if Hardware::CPU.intel?' >> dbdev.rb
        echo "      url \"https://github.com/supabase/dbdev/releases/download/v${version}/dbdev-v${version}-macos-amd64.tar.gz\"" >> dbdev.rb
        echo "      sha256 \"${macos_amd64_hash}\"" >> dbdev.rb
        echo '' >> dbdev.rb
        echo '      def install' >> dbdev.rb
        echo '        bin.install "dbdev"' >> dbdev.rb
        echo '      end' >> dbdev.rb
        echo '    end' >> dbdev.rb
        echo '  end' >> dbdev.rb
        echo '' >> dbdev.rb
        echo '  on_linux do' >> dbdev.rb
        echo '    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?' >> dbdev.rb
        echo "      url \"https://github.com/supabase/dbdev/releases/download/v${version}/dbdev-v${version}-linux-arm64.tar.gz\"" >> dbdev.rb
        echo "      sha256 \"${linux_arm64_hash}\"" >> dbdev.rb
        echo '' >> dbdev.rb
        echo '      def install' >> dbdev.rb
        echo '        bin.install "dbdev"' >> dbdev.rb
        echo '      end' >> dbdev.rb
        echo '    end' >> dbdev.rb
        echo '    if Hardware::CPU.intel?' >> dbdev.rb
        echo "      url \"https://github.com/supabase/dbdev/releases/download/v${version}/dbdev-v${version}-linux-amd64.tar.gz\"" >> dbdev.rb
        echo "      sha256 \"${linux_amd64_hash}\"" >> dbdev.rb
        echo '' >> dbdev.rb
        echo '      def install' >> dbdev.rb
        echo '        bin.install "dbdev"' >> dbdev.rb
        echo '      end' >> dbdev.rb
        echo '    end' >> dbdev.rb
        echo '  end' >> dbdev.rb
        echo 'end' >> dbdev.rb

        cat dbdev.rb
