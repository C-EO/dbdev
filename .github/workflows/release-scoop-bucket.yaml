name: Release Scoop Bucket

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
    secrets:
      scoop_bucket_rw:
        required: true

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: supabase/scoop-bucket
        ref: 'main'
        token:  ${{ secrets.scoop_bucket_rw }}

    - name: Download Windows AMD64 package
      uses: robinraju/release-downloader@v1.12
      with:
        repository: "supabase/dbdev"
        tag: ${{ inputs.tag }}
        fileName: "dbdev-${{ inputs.tag }}-windows-amd64.zip"

    - name: Generate and Push Manifest File
      run: |
        windows_amd64_hash=`shasum -a 256 dbdev-${{ inputs.tag }}-windows-amd64.zip | cut -d" " -f1`

        tag="${{ inputs.tag }}"
        # strip the leading v
        version="${tag:1}"

        # update dbdev.json file
        echo '{' > dbdev.json
        echo "    \"version\": \"${version}\"," >> dbdev.json
        echo '    "architecture": {' >> dbdev.json
        echo '        "64bit": {' >> dbdev.json
        echo "            \"url\": \"https://github.com/supabase/dbdev/releases/download/v${version}/dbdev-v${version}-windows-amd64.zip\"," >> dbdev.json
        echo '            "bin": [' >> dbdev.json
        echo '                "dbdev.exe"' >> dbdev.json
        echo '            ],' >> dbdev.json
        echo "            \"hash\": \"${windows_amd64_hash}\"" >> dbdev.json
        echo '        }' >> dbdev.json
        echo '    },' >> dbdev.json
        echo '    "homepage": "https://database.dev",' >> dbdev.json
        echo '    "license": "Apache",' >> dbdev.json
        echo '    "description": "CLI to help publish extensions to database.dev"' >> dbdev.json
        echo '}' >> dbdev.json
        echo ''

        git diff

        git config user.name "dbdev release-scoop-bucket.yaml workflow"
        git config user.email raminder@supabase.io
        git add ./dbdev.json
        git commit -m "dbdev scoop update for version v${version}"
        git push
